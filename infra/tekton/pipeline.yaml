apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: nodejs-ci-pipeline
  namespace: app
spec:
  params:
    - name: repo-url
      description: Git repository URL
      type: string
    - name: image-name
      description: Name of the image to be built
      type: string
    - name: image_tag
      description: Tag for the generated image
      type: string
    - name: git-username
      description: Username for pushing to GitHub
      type: string
    - name: git-email
      description: Git user email
      type: string
    - name: git-repo
      description: Repository path in the format user/repo
      type: string
    - name: git-branch
      description: Branch to be updated
      type: string
      default: main

  workspaces:
    - name: shared-workspace

  tasks:
    - name: clone-repo
      taskRef:
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: url
          value: $(params.repo-url)
        - name: deleteExisting
          value: "true"

    - name: test-nodejs
      runAfter: [clone-repo]
      taskRef:
        name: nodejs-tests
      workspaces:
        - name: source
          workspace: shared-workspace

    - name: build-image
      runAfter: [test-nodejs]
      taskRef:
        name: kaniko-build
      workspaces:
        - name: source
          workspace: shared-workspace
        - name: output
          workspace: shared-workspace
      params:
        - name: DOCKERFILE
          value: app/Containerfile
        - name: CONTEXT
          value: app
        - name: IMAGE_TARBALL
          value: /workspace/output/image.tar

    - name: push-image
      runAfter: [build-image]
      taskRef:
        name: push-image
      workspaces:
        - name: input
          workspace: shared-workspace
      params:
        - name: IMAGE
          value: image-registry.openshift-image-registry.svc:5000/$(context.pipelineRun.namespace)/$(params.image-name):$(params.image_tag)
        - name: IMAGE_TARBALL
          value: /workspace/input/image.tar
        - name: IMAGE_TAG
          value: $(params.image_tag)

    - name: update-manifests
      runAfter: [push-image]
      taskRef:
        name: update-manifests
      workspaces:
        - name: source
          workspace: shared-workspace
      params:
        - name: IMAGE_TAG
          value: $(params.image_tag)
        - name: GIT_USERNAME
          value: $(params.git-username)
        - name: GIT_EMAIL
          value: $(params.git-email)
        - name: GIT_REPO
          value: $(params.git-repo)
        - name: GIT_BRANCH
          value: $(params.git-branch)